Option Explicit

Function GetUseComNo() As String
    Dim Serial        As Object
    Dim SerialSet     As Object
    Dim objWMIService As Object
    Dim strComputer   As String
    Dim intCnt        As Integer    '要素数
    Dim strComName    As String     '取得したデバイス名

    strComputer = "."
    'WMIを呼び出す
    Set objWMIService = GetObject("winmgmts:\\" & strComputer & "\root\cimv2")

    'PnPで登録されているもの（デバイスマネージャで見えるもの）から
    'シリアルポートのクラスでかつ名前に「(COMxx)」と付いているものを抽出
    Set SerialSet = objWMIService.ExecQuery("Select * from Win32_PNPEntity Where " & _
                    "(ClassGuid = '{4D36E978-E325-11CE-BFC1-08002BE10318}') and " & _
                    "(Name like '%(COM%)')")

    '全ポートの数(取得できた項目数)
    intCnt = SerialSet.Count

    '情報の取得
    strComName = ""
    For Each Serial In SerialSet
        'デバイス名を取得 「"通信ポート (COM1)"」
        If strComName <> "" Then
            strComName = strComName & ","
        End If
        strComName = strComName & Serial.Name
    Next

    '戻り値セット
    GetUseComNo = strComName
End Function

'ポートオープン
Private Sub CommandButton1_Click()
    Dim DeviceName As String
    Dim ComStr As Variant
    Dim ComPortNo As Byte
    Dim Comname As Variant
    Dim Recstr As String
    Dim cnt As Long
    Dim strCmd As String
    Dim strRev As String
    Dim Rt As Long
    Dim lngRet As Long
    Dim i As Long
    
      Me.Application.ScreenUpdating = False
        DeviceName = Me.Cells(2, 2).Value
        ComPortNo = 0
        ComStr = Split(GetUseComNo, ",")
        'Debug.Print GetUseComNo
        For Each Comname In ComStr
         If InStr(Comname, DeviceName) > 0 Then
            Comname = Trim(Comname)
            ComPortNo = Val(Mid(Comname, InStrRev(Comname, "COM") + 3, InStrRev(Comname, ")") - InStrRev(Comname, "COM") - 3))
            Me.Cells(3, 2).Value = "COM" & CStr(ComPortNo)
            'Debug.Print ComPortNo
            End If
        Next
        If ComPortNo = 0 Then
            MsgBox ("デバイスが見つかりません")
            Exit Sub
        End If
        
    fileHandle = portOpen(ComPortNo)
    
    If fileHandle > 0 And Me.Cells(2, 2).Value <> fileHandle Then
        Me.Cells(4, 2).Value = fileHandle
    End If
    If fileHandle < 0 Then
        fileHandle = Me.Cells(4, 2).Value
        Call portClose(fileHandle)
        fileHandle = portOpen(ComPortNo)
    End If
    Me.Cells(4, 2).Value = fileHandle
    If fileHandle < 0 Then
        MsgBox ("COMポート接続に失敗しました")
        Exit Sub
    End If
    Sleep 1000
    strCmd = vbCr
    lngRet = wrkRsComm(fileHandle, strCmd, strRev)
    
    Debug.Print strRev
    If InStr(strRev, "->") > 0 Then
        i = 0
        Do
            If Me.Cells(10 + i, 5).Value = "" Then Exit Do
            Me.Cells(10 + i, 5).Value = "L"
            i = i + 1
        Loop
        strCmd = "ALL0" & vbCr
        lngRet = wrkRsComm(fileHandle, strCmd, strRev)
        Me.Cells(7, 1).Value = strRev
        Me.Cells(5, 2).Value = "連接中"
        MsgBox (DeviceName & "と連接しました")
    Else
        Me.Cells(5, 2).Value = "連接失敗"
        MsgBox (DeviceName & "と連接されていません"), Buttons:=vbCritical
    End If
    Me.Application.ScreenUpdating = True
    
End Sub

Private Sub CommandButton2_Click()
    Dim i As Long
    Dim strCmd As String
    Dim strRev As String
    Dim lngRet As Long
    
  If Me.Cells(4, 2).Value = "解放" Then
    MsgBox ("既にCOMﾎﾟｰﾄを解放済みか他で占有されています"), Buttons:=vbCritical
  Else
        i = 0
        Do
            If Me.Cells(10 + i, 5).Value = "" Then Exit Do
            Me.Cells(10 + i, 5).Value = "L"
            i = i + 1
        Loop
        strCmd = "ALL0" & vbCr
        lngRet = wrkRsComm(fileHandle, strCmd, strRev)
        Me.Cells(7, 1).Value = strRev
        Call portClose(Me.Cells(4, 2).Value)
        Me.Cells(4, 2).Value = "解放"
        Me.Cells(5, 2).Value = ""
        MsgBox ("COMﾎﾟｰﾄの切断及び出力をLにしました。")
  End If
    
End Sub
  
