Option Explicit

Type Q_st
    Q_Contents As String
    Ans_Count As Byte
    Ans_St(20) As String
    Ans_Sum(20) As Long
    

End Type
Dim TestSheet(10) As Worksheet
Dim SectionList(50) As String
Dim AnalysisList As Variant

Sub All_Analysis()


Dim i As Long
Dim j As Long
Dim x As Long
Dim y As Long

Dim Ans_posx As Long
Dim Ans_posy As Long
Dim Ans_TotalCount As Long


Dim Q_TotalCount As Byte
Dim Q_para(30) As Q_st

Dim AnsList As Variant
Dim DataList As Variant

Dim CheckData As Variant

Dim Pastposy As Long
Dim Pastposx As Long
Dim PastOffset As Long

Dim Listposy As Long
Dim Listposx As Long

Dim Chartposy As Long
Dim Chartposx As Long

Pastposy = 1
Pastposx = 1
PastOffset = 15
y = 1
x = 1
i = 1
Ans_posy = 2
Ans_posx = 0
Erase SectionList
Set TestSheet(0) = ThisWorkbook.Sheets("Sheet1")
With TestSheet(0)
    Do
        If .Cells(y, x).Value = "" Then Exit Do
        Q_TotalCount = x
        Q_para(x).Ans_Count = .Cells(y, x).Value
        Q_para(x).Q_Contents = .Cells(y + 1, x).Value
        Do
            If .Cells(y + 2, x).Value = "" Then Exit Do
            Q_para(x).Ans_St(i) = .Cells(y + 2, x).Value
            Q_para(x).Ans_Sum(i) = 0
            y = y + 1
            i = i + 1
            
        Loop
        y = 1
        i = 1
        x = x + 1
    Loop
End With
Set TestSheet(1) = ThisWorkbook.Sheets("Sheet2")
AnsList = TestSheet(1).Range("A1").CurrentRegion
Ans_TotalCount = UBound(AnsList, 1) - 2
For i = 1 To Ans_TotalCount
    Call Section_Input(AnsList(i + Ans_posy, 2 + Ans_posx))
    For j = 1 To Q_TotalCount
        CheckData = AnsList(i + Ans_posy, j + Ans_posx + 2)
        If CheckData = Empty Then
             Q_para(j).Ans_Sum(0) = Q_para(j).Ans_Sum(0) + 1
        Else
            Q_para(j).Ans_Sum(CheckData) = Q_para(j).Ans_Sum(CheckData) + 1
        End If
    Next
Next
'
'Debug.Print Q_para(1).Ans_Sum(0)
'Debug.Print Q_para(1).Ans_Sum(1)
'Debug.Print Q_para(1).Ans_Sum(2)
'Debug.Print Q_para(1).Ans_Sum(3)
'Debug.Print Q_para(10).Ans_Sum(0)
'Debug.Print Q_para(10).Ans_Sum(1)
'Debug.Print Q_para(10).Ans_Sum(2)

Set TestSheet(2) = ThisWorkbook.Sheets("Sheet3")
TestSheet(2).Activate
TestSheet(2).Cells.Clear
Call ChartClear
With TestSheet(2)
    For i = 1 To Q_TotalCount
        ReDim DataList(1 To Q_para(i).Ans_Count + 2, 1 To 2)
        DataList(1, 2) = Q_para(i).Q_Contents
        For j = 1 To Q_para(i).Ans_Count
            DataList(j + 1, 1) = Q_para(i).Ans_St(j)
            DataList(j + 1, 2) = Q_para(i).Ans_Sum(j)
            
        Next
        DataList(j + 1, 1) = "未回答"
        DataList(j + 1, 2) = Q_para(i).Ans_Sum(0)
        Listposy = Pastposy + UBound(DataList, 1) - 1
        Listposx = Pastposx + UBound(DataList, 2) - 1
        .Range(.Cells(Pastposy, Pastposx), .Cells(Listposy, Listposx)) = DataList
        Call NormalChart_Add(i, Pastposy, Pastposx, Listposy - Pastposy + 1, Pastposy, 5, 14, 8)
        Pastposy = Pastposy + PastOffset
    
    Next
    .Cells(1, 1).Select
End With
For i = 0 To 10
    Set TestSheet(i) = Nothing
Next


End Sub
Sub Select_Analysis()
Dim MainNo As Byte
Dim SubNo As Byte
Dim AnalyzeON As Boolean

Dim i As Long
Dim j As Long
Dim k As Long
Dim x As Long
Dim y As Long

Dim Ans_posx As Long
Dim Ans_posy As Long
Dim Ans_TotalCount As Long
Dim Ana_posy As Long
Dim Ana_posx As Long

Dim Q_TotalCount As Byte
Dim Q_para(30) As Q_st

Dim AnsList As Variant
Dim DataList As Variant

Dim CheckData As Variant

Dim Pastposy As Long
Dim Pastposx As Long
Dim PastOffset As Long

Dim Listposy As Long
Dim Listposx As Long

Dim Chartposy As Long
Dim Chartposx As Long
Dim ChartNo As Long

Pastposy = 1
Pastposx = 1
PastOffset = 30
y = 1
x = 1
i = 1
Ans_posy = 2
Ans_posx = 0
ChartNo = 1
'
'MainNo = 2
'SubNo = 5
'AnalyzeON = True

Application.ScreenUpdating = False


Erase SectionList
Set TestSheet(0) = ThisWorkbook.Sheets("Sheet1")
With TestSheet(0)
    If .Cells(16, 5).Value = 0 Then
        AnalyzeON = False
    Else
        AnalyzeON = True
        SubNo = .Cells(16, 5).Value
    End If
    Do
        If .Cells(y, x).Value = "" Then Exit Do
        Q_TotalCount = x
        Q_para(x).Ans_Count = .Cells(y, x).Value
        Q_para(x).Q_Contents = .Cells(y + 1, x).Value
        Do
            If .Cells(y + 2, x).Value = "" Then Exit Do
            Q_para(x).Ans_St(i) = .Cells(y + 2, x).Value
            Q_para(x).Ans_Sum(i) = 0
            y = y + 1
            i = i + 1
        Loop
        y = 1
        i = 1
        x = x + 1
    Loop
End With


Set TestSheet(1) = ThisWorkbook.Sheets("Sheet2")
AnsList = TestSheet(1).Range("A1").CurrentRegion
Ans_TotalCount = UBound(AnsList, 1) - 2
For i = 1 To Ans_TotalCount
    Call Section_Input(AnsList(i + Ans_posy, 2 + Ans_posx))
    For j = 1 To Q_TotalCount
        CheckData = AnsList(i + Ans_posy, j + Ans_posx + 2)
        If CheckData = Empty Then
             Q_para(j).Ans_Sum(0) = Q_para(j).Ans_Sum(0) + 1
        Else
            Q_para(j).Ans_Sum(CheckData) = Q_para(j).Ans_Sum(CheckData) + 1
        End If
    Next
Next

Set TestSheet(2) = ThisWorkbook.Sheets("Sheet3")
TestSheet(2).Activate
TestSheet(2).Cells.Clear
Call ChartClear
With TestSheet(2)

    If AnalyzeON = False Then PastOffset = 15

    '------------------メインリスト作成------------
    For i = 1 To Q_TotalCount
        ReDim DataList(1 To Q_para(i).Ans_Count + 2, 1 To 2)
        DataList(1, 2) = Q_para(i).Q_Contents
        For j = 1 To Q_para(i).Ans_Count
            DataList(j + 1, 1) = Q_para(i).Ans_St(j)
            DataList(j + 1, 2) = Q_para(i).Ans_Sum(j)
            
        Next
        DataList(j + 1, 1) = "未回答"
        DataList(j + 1, 2) = Q_para(i).Ans_Sum(0)
        Listposy = Pastposy + UBound(DataList, 1) - 1
        Listposx = Pastposx + UBound(DataList, 2) - 1
        .Range(.Cells(Pastposy, Pastposx), .Cells(Listposy, Listposx)) = DataList
        
        Call NormalChart_Add(ChartNo, Pastposy, Pastposx, Listposy - Pastposy + 1, Pastposy, 1, PastOffset - 1, 6)
        ChartNo = ChartNo + 1
        '------------------分析リスト作成------------
        MainNo = i
        If AnalyzeON = True Then
        
            ReDim AnalysisList(1 To Q_para(MainNo).Ans_Count + 2, 1 To Q_para(SubNo).Ans_Count + 2)
              For k = 1 To Q_para(MainNo).Ans_Count + 2
                  For j = 1 To Q_para(SubNo).Ans_Count + 2
                  AnalysisList(k, j) = 0
                  Next
              Next
              
              For k = 1 To Ans_TotalCount
                  If AnsList(k + Ans_posy, MainNo + Ans_posx + 2) = Empty Then
                      Ana_posy = Q_para(MainNo).Ans_Count + 2
                  Else
                      Ana_posy = AnsList(k + Ans_posy, MainNo + Ans_posx + 2) + 1
                  End If
                  
                  If AnsList(k + Ans_posy, SubNo + Ans_posx + 2) = Empty Then
                      Ana_posx = Q_para(SubNo).Ans_Count + 2
                  Else
                      Ana_posx = AnsList(k + Ans_posy, SubNo + Ans_posx + 2) + 1
                  End If
                  AnalysisList(Ana_posy, Ana_posx) = AnalysisList(Ana_posy, Ana_posx) + 1
              Next
            For k = 1 To UBound(AnalysisList, 1) - 1
                AnalysisList(k + 1, 1) = Q_para(MainNo).Ans_St(k)
            Next
            AnalysisList(k, 1) = "未回答"
            For k = 1 To UBound(AnalysisList, 2) - 1
                AnalysisList(1, k + 1) = Q_para(SubNo).Ans_St(k)
            Next
            AnalysisList(1, k) = "未回答"
            AnalysisList(1, 1) = Q_para(SubNo).Q_Contents
            Listposy = Pastposy + UBound(AnalysisList, 1) - 1
            Listposx = Pastposx + UBound(AnalysisList, 2) - 1
            .Range(.Cells(Pastposy, Pastposx + 2), .Cells(Listposy, Listposx + 2)) = AnalysisList
             Call AnalyzeChart_Add(ChartNo, Pastposy, Pastposx + 2, UBound(AnalysisList, 1), UBound(AnalysisList, 2), Pastposy, 7, PastOffset - 1, 6)
             ChartNo = ChartNo + 1
        End If
        Pastposy = Pastposy + PastOffset
    Next
    .Cells(1, 1).Select
End With
For i = 0 To 10
    Set TestSheet(i) = Nothing
Next

Application.ScreenUpdating = True
MsgBox ("分析完了")
End Sub



Sub ChartClear()
    Dim Chart_name As String
    Dim strObjName() As String
    Dim intObj As Integer
    Dim i As Integer
    Dim ChartHight(5) As Long

    
    With ActiveSheet
        intObj = .ChartObjects.Count
        ReDim strObjName(intObj)
        For i = 1 To intObj
            strObjName(i) = .ChartObjects(i).Name
        Next i
        For i = 1 To intObj
            'MsgBox strObjName(i) & "を削除します"
            .ChartObjects(strObjName(i)).Delete
        Next i
    End With
End Sub
 
Sub NormalChart_Add(ChartNo As Long, PosY As Long, PosX As Long, DataCount As Long, SetposY As Long, SetposX As Long, Height As Long, Width As Long)
    Dim i As Integer
    With ActiveSheet
        .Shapes.AddChart2(251, xlPie).Select
        ActiveChart.ClearToMatchStyle
        ActiveChart.ChartStyle = 257
        ActiveChart.SetSourceData Source:=.Range _
        (.Cells(PosY, PosX), .Cells(PosY + DataCount - 1, PosX + 1))
        ActiveChart.ApplyLayout (6)
        .ChartObjects(ChartNo).Height = .Range(.Cells(1, 1), .Cells(Height, Width)).Height
        .ChartObjects(ChartNo).Width = .Range(.Cells(1, 1), .Cells(Height, Width)).Width
        .ChartObjects(ChartNo).Top = .Cells(SetposY, SetposX).Top
        .ChartObjects(ChartNo).Left = .Cells(SetposY, SetposX).Left
    End With
End Sub
Sub AnalyzeChart_Add(ChartNo As Long, PosY As Long, PosX As Long, DataCountY As Long, DataCountX As Long, SetposY As Long, SetposX As Long, Height As Long, Width As Long)
    Dim i As Integer
    With ActiveSheet
        .Shapes.AddChart2(251, xlBarStacked100).Select
        ActiveChart.ClearToMatchStyle
        ActiveChart.ChartStyle = 304
        ActiveChart.SetSourceData Source:=.Range _
        (.Cells(PosY, PosX), .Cells(PosY + DataCountY - 1, PosX + DataCountX - 1))
        ActiveChart.ApplyLayout (5)
        ActiveChart.ChartTitle.Text = .Cells(PosY, PosX).Value
        .ChartObjects(ChartNo).Height = .Range(.Cells(1, 1), .Cells(Height, Width)).Height
        .ChartObjects(ChartNo).Width = .Range(.Cells(1, 1), .Cells(Height, Width)).Width
        .ChartObjects(ChartNo).Top = .Cells(SetposY, SetposX).Top
        .ChartObjects(ChartNo).Left = .Cells(SetposY, SetposX).Left
    End With
End Sub

Sub Section_Input(ByVal Section As String)
    Dim i As Long
    Dim flg As Boolean
    flg = False
    i = 1
    If SectionList(1) = Empty Then
        SectionList(0) = Str(i)
        SectionList(1) = Section
        flg = True
    Else
        For i = 1 To Val(SectionList(0))
            If SectionList(i) = Section Then flg = True
            i = i + 1
        Next
    End If
    If flg = False Then
        SectionList(0) = Str(Val(SectionList(0)) + 1)
        SectionList(0) = Section
    End If
    
End Sub
